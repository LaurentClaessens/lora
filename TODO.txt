For HashTable :

    ht=HashTable<K,V>
    keys=ht.getKeys()   should be an object that allows to loop over the keys with the syntax
                for (K k:keys)
    values=ht.getValues()     idem for the values.
            

For reading the configuration file
   
    We should memoize the terminal preferences in GitRepository.

TODO

- The 'run_next' function should not be in a "while true" loop, but launched when a new task is created and when a task is finished.
- add "tr" on every QString for internationalization.
- the logging system should open lora.log, then lora1.log, lora2.log, etc.  (automatic naming)
- the purge vector is parsed too many times
- a better command line argument parser
- a better image for "plus.png"
- the installation program should read the configuration file an fill the blanks.
- in the installation, there is a duplicate of information between   
    BackupWidget::exclude_list and ExcludeChooser::choosers.
- the button "commit that" should update the status panel.
- make a version with no graphical interface. One should be able to do the backup 
    even from the most basic debbootstraped USB stick.
- symlinks are ignored. That should be optional. See also the todo about printing 
    the log file.
- in the installation, there is a duplicate of information between   BackupWidget::exclude_list and ExcludeChooser::choosers.
- the button "commit that" should update the status panel.
- make a version with no graphical interface. One should be able to do the backup even from the most basic debbootstraped USB stick.
- symlinks are ignored. That should be optional. See also the todo about printing the log file.
- list of modified files should be in a scroll
- update the status widget when commiting.
- include this TODO.txt in the manual.
- when a 'git commit' is done, remove the corresponding line inside the GitListWindow

- Before to exit the program, we should print the log file. Many "throws" could be silently caught during the execution and produce a warning in the log file.
        The Logging class is more or less done for this purpose.

    example : excluding a non-existing directory should be very clearly notified to the user.
- When one deletes a HashTable, it deletes the values. Is it a good choice ? That's what I need in my use case, but ...
- When the configuration file is wrong or empty, we have a stupid crash instead of a well done error message.
- crash on "permesso negato" on ~/core
- I have a crash on the backup of file
   ~/.kde/share/apps/konqueror/autosave/_1.195a
  FileCopyTask::run() says that it does not exist. I guess it was automatically removed between the task creation and the run. I'm not sure what to do about this... Probably logging.
- After making the commit, push "Apply these changes". That triggers a crash :
     Are you trying to iterate over an empty HashTable ?
- It seem to have a crash when a filename contains ":".
  what():  boost::filesystem::copy_file: Invalid argument: "/home/1/2015/lclaesse/.local/share/Trash/info/C:\nppdf32Log\debuglog.txt.trashinfo", "/media/00CD-23F5/backup.lora/.local/share/Trash/info/C:\nppdf32Log\debuglog.txt.trashinfo"
  
  what():  boost::filesystem::copy_file: Invalid argument: "/home/1/2015/lclaesse/.local/share/gvfs-metadata/computer:-25b5580e.log", "/media/00CD-23F5/backup.lora/.local/share/gvfs-metadata/computer:-25b5580e.log"
Copy "/home/1/2015/lclaesse/.local/share/gvfs-metadata/computer:-25b5580e.log" --> "/media/00CD-23F5/backup.lora/.local/share/gvfs-metadata/computer:-25b5580e.log"Aborted (core dumped)

